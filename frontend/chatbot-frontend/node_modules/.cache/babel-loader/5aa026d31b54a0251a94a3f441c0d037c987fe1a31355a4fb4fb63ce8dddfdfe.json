{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Development\\\\AI-Personal-Assistant\\\\frontend\\\\chatbot-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const {\n    transcript,\n    listening,\n    resetTranscript\n  } = useSpeechRecognition();\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your browser doesn\\u2019t support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  const sendMessage = async message => {\n    if (!message) return;\n    const newMessages = [...messages, {\n      role: \"user\",\n      content: message\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/chat\", {\n        message\n      });\n      const botMessage = response.data.reply;\n      setMessages([...newMessages, {\n        role: \"assistant\",\n        content: botMessage\n      }]);\n\n      // Text-to-Speech: Bot talks\n      const utterance = new SpeechSynthesisUtterance(botMessage);\n      speechSynthesis.speak(utterance);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  const handleVoiceInput = () => {\n    sendMessage(transcript);\n    resetTranscript();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"Arial\",\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Voice Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"300px\",\n        overflowY: \"auto\",\n        border: \"1px solid black\",\n        padding: \"10px\",\n        margin: \"10px auto\",\n        width: \"50%\"\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: msg.role === \"user\" ? \"blue\" : \"green\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message\",\n      style: {\n        width: \"300px\",\n        padding: \"10px\",\n        marginRight: \"5px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage(input),\n      style: {\n        padding: \"10px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SpeechRecognition.startListening,\n      style: {\n        marginTop: \"10px\",\n        padding: \"10px\"\n      },\n      children: \"\\uD83C\\uDF99\\uFE0F Start Talking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVoiceInput,\n      style: {\n        marginLeft: \"5px\",\n        padding: \"10px\"\n      },\n      children: \"\\u2705 Send Voice Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: listening ? \"üéß Listening...\" : \"üéôÔ∏è Click 'Start Talking' to use your voice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yidl19QdEtXDBlK9V5Ic4p/M7rQ=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","sendMessage","message","newMessages","role","content","response","post","botMessage","data","reply","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","error","console","handleVoiceInput","style","fontFamily","textAlign","marginTop","height","overflowY","border","padding","margin","width","map","msg","index","color","value","onChange","e","target","placeholder","marginRight","onClick","startListening","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/USER/Development/AI-Personal-Assistant/frontend/chatbot-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const { transcript, listening, resetTranscript } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return <p>Your browser doesn‚Äôt support speech recognition.</p>;\n  }\n\n  const sendMessage = async (message) => {\n    if (!message) return;\n\n    const newMessages = [...messages, { role: \"user\", content: message }];\n    setMessages(newMessages);\n    setInput(\"\");\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/chat\", {\n        message,\n      });\n\n      const botMessage = response.data.reply;\n      setMessages([...newMessages, { role: \"assistant\", content: botMessage }]);\n\n      // Text-to-Speech: Bot talks\n      const utterance = new SpeechSynthesisUtterance(botMessage);\n      speechSynthesis.speak(utterance);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  const handleVoiceInput = () => {\n    sendMessage(transcript);\n    resetTranscript();\n  };\n\n  return (\n    <div style={{ fontFamily: \"Arial\", textAlign: \"center\", marginTop: \"50px\" }}>\n      <h2>AI Voice Chatbot</h2>\n      <div style={{ height: \"300px\", overflowY: \"auto\", border: \"1px solid black\", padding: \"10px\", margin: \"10px auto\", width: \"50%\" }}>\n        {messages.map((msg, index) => (\n          <p key={index} style={{ color: msg.role === \"user\" ? \"blue\" : \"green\" }}>\n            <strong>{msg.role}:</strong> {msg.content}\n          </p>\n        ))}\n      </div>\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Type a message\"\n        style={{ width: \"300px\", padding: \"10px\", marginRight: \"5px\" }}\n      />\n      <button onClick={() => sendMessage(input)} style={{ padding: \"10px\" }}>Send</button>\n      <br />\n      <button onClick={SpeechRecognition.startListening} style={{ marginTop: \"10px\", padding: \"10px\" }}>üéôÔ∏è Start Talking</button>\n      <button onClick={handleVoiceInput} style={{ marginLeft: \"5px\", padding: \"10px\" }}>‚úÖ Send Voice Input</button>\n      <p>{listening ? \"üéß Listening...\" : \"üéôÔ∏è Click 'Start Talking' to use your voice\"}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}